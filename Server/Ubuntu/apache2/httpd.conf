 ##
     ## httpd.conf -- Arquivo de configuração do servidor httpd Apache
     ##

     #
     # Baseado nos arquivos de configuração originais do servidor NCSA por Rob McCool.
     # Modificado para distribuição junto ao guia Foca GNU/Linux Avançado
     # http://focalinux.cipsga.org.br/ <gleydson@guiafoca.org>
     #
     # Este é o arquivo de configuração principal do servidor Apache. Ele contém as
     # diretivas de configuração que dão ao servidor suas instruções.
     # Veja <http://www.apache.org/docs/> para informações detalhadas sobre as
     # diretivas.
     #
     # NÃO leia simplesmente as instruções deste arquivo sem entender o que significam
     # e o que fazem, se não tiver certeza do que está fazendo consulte a documentação
     # on-line ou leia as seções apropriadas do guia. Você foi avisado.
     #
     # Após este arquivo ser processado, o servidor procurará e processará o arquivo
     # /etc/apache/srm.conf e então /etc/apache/access.conf
     # a não ser que você tenha modificado o nome dos arquivos acima através das
     # diretivas ResourceConfig e/ou AccessConfig neste arquivo.
     #
     # Configuração e nomes de arquivos de log: Se os nomes de arquivos que
     # especificar para os arquivos de controle do servidor iniciam com uma
     # "/", o servidor usará aquele caminho explicitamente. Se os nomes *não*
     # iniciarem com uma "/", o valor de ServerRoot é adicionado -- assim
     # "logs/foo.log" com ServerRoot ajustado para "/usr/local/apache" será
     # interpretado pelo servidor como "/usr/local/apache/logs/foo.log".
     #
     # Originalmente por Rob McCool
     # modificado por Gleydson Mazioli da Silva para o guia Foca GNU/Linux

     # Carga dos Módulos de Objetos Compartilhados:
     # Para você ser capaz de usa a funcionalidade de um módulo que foi construído como
     # um módulo compartilhado, será necessário adicionar as linhas 'LoadModule'
     # correspondente a sua localização, assim as diretivas que os módulos contém
     # estarão disponíveis _antes_ de serem usadas.
     # Exemplo:

     #
     # ServerType pode ser inetd, ou standalone.  O modo Inetd somente é suportado nas
     # plataformas Unix. O modo standalone inicia o servidor como um daemon.
     #

     ServerType standalone

     # Se estiver executando a partir do inetd, vá até a diretiva "ServerAdmin".

     # Port: A porta que o servidor standalone escutará. Para portas < 1023, será
     # necessário o servidor funcionando como root inicialmente.

     Port 80

     #
     # HostnameLookups: Registra os nomes DNS dos clientes ou apenas seus endereços
     # IP's
     # ex., www.apache.org (on) ou 204.62.129.132 (off).
     # O valor padrão é off porque permitirá menos tráfego na rede. Ativando
     # esta opção significa que cada acesso de um cliente resultará em
     # NO MÍNIMO uma requisição de procura ao servidor de nomes (DNS).
     #

     HostnameLookups off

     # Caso desejar que o servidor http seja executado como um usuário ou grupo diferente
     # você deve executar o httpd inicialmente como root e ele modificará sua ID para a
     # especificada.

     # User/Group: O nome (ou #número) do usuário/grupo que executará o servidor httpd.
     # No SCO (ODT 3) use "User nouser" e "Group nogroup"
     # No HPUX você pode não será capaz de usar memória compartilhada como nobody, e
     # é sugerido que seja criado um usuário www e executar o servidor httpd como
     # este usuário, adequando as permissões onde necessárias.

     User www-data
     Group www-data

     # ServerAdmin: Seu endereço de e-mail, onde os problemas com o servidor devem ser
     # enviadas. Este endereço aparecerá nas mensagens de erro do servidor.
     ServerAdmin gleydson@guiafoca.org

     #
     # ServerRoot: O topo da árvore de diretórios onde os arquivos de configuração do
     # servidor, erros, e log são mantidos.
     #
     # NOTA: Se tiver a intenção de colocar isto em um sistema de arquivos montado
     # em um servidor NFS (ou outra rede) então por favor leia a documentação do
     # LockFile
     # (disponível em <http://www.apache.org/docs/mod/core.html#lockfile>);
     # e se salvará de vários problemas.
     #
     # Não adicione uma barra no fim do caminho do diretório.
     #

     ServerRoot /etc/apache

     # BindAddress: Você pode usar esta opção em virtual hosts. Esta
     # opção é usada para dizer ao servidor que endereço IP escutar. Ele pode
     # conter ou "*", um endereço IP, ou um nome de domínio completamente qualificado
     # (FQDN). Veja também a diretiva VirtualHost.

     BindAddress *

     #
     # Suporte a Objetos Compartilhados Dinamicamente (DSO - Dynamic Shared Object)
     #
     # Para ser capaz de usar a funcionalidade de um módulo que foi compilado como
     # um módulo DSO, você terá que adicionar as linhas 'LoadModule' correspondentes
     # nesta localização, assim as diretivas contidas nela estarão disponíveis
     # _antes_ de serem usadas. Por favor leia o arquivo README.DSO na distribuição
     # 1.3 do Apache para mais detalhes sobre o mecanismo DSO e execute o comando
     # "apache -l" para a lista de módulos já compilados (estaticamente linkados e
     # assim sempre disponíveis) em seu binário do Apache.
     #
     # Please keep this LoadModule: line here, it is needed for installation.
     # LoadModule vhost_alias_module /usr/lib/apache/1.3/mod_vhost_alias.so
     # LoadModule env_module /usr/lib/apache/1.3/mod_env.so
     LoadModule config_log_module /usr/lib/apache/1.3/mod_log_config.so
     # LoadModule mime_magic_module /usr/lib/apache/1.3/mod_mime_magic.so
     LoadModule mime_module /usr/lib/apache/1.3/mod_mime.so
     LoadModule negotiation_module /usr/lib/apache/1.3/mod_negotiation.so
     LoadModule status_module /usr/lib/apache/1.3/mod_status.so
     # LoadModule info_module /usr/lib/apache/1.3/mod_info.so
     # LoadModule includes_module /usr/lib/apache/1.3/mod_include.so
     LoadModule autoindex_module /usr/lib/apache/1.3/mod_autoindex.so
     LoadModule dir_module /usr/lib/apache/1.3/mod_dir.so
     LoadModule php3_module /usr/lib/apache/1.3/libphp3.so
     LoadModule cgi_module /usr/lib/apache/1.3/mod_cgi.so
     # LoadModule asis_module /usr/lib/apache/1.3/mod_asis.so
     # LoadModule imap_module /usr/lib/apache/1.3/mod_imap.so
     # LoadModule action_module /usr/lib/apache/1.3/mod_actions.so
     # LoadModule speling_module /usr/lib/apache/1.3/mod_speling.so
     LoadModule userdir_module /usr/lib/apache/1.3/mod_userdir.so
     LoadModule alias_module /usr/lib/apache/1.3/mod_alias.so
     LoadModule rewrite_module /usr/lib/apache/1.3/mod_rewrite.so
     LoadModule access_module /usr/lib/apache/1.3/mod_access.so
     LoadModule auth_module /usr/lib/apache/1.3/mod_auth.so
     # LoadModule anon_auth_module /usr/lib/apache/1.3/mod_auth_anon.so
     # LoadModule dbm_auth_module /usr/lib/apache/1.3/mod_auth_dbm.so
     # LoadModule db_auth_module /usr/lib/apache/1.3/mod_auth_db.so
     # LoadModule proxy_module /usr/lib/apache/1.3/libproxy.so
     # LoadModule digest_module /usr/lib/apache/1.3/mod_digest.so
     # LoadModule cern_meta_module /usr/lib/apache/1.3/mod_cern_meta.so
     LoadModule expires_module /usr/lib/apache/1.3/mod_expires.so
     # LoadModule headers_module /usr/lib/apache/1.3/mod_headers.so
     # LoadModule usertrack_module /usr/lib/apache/1.3/mod_usertrack.so
     LoadModule unique_id_module /usr/lib/apache/1.3/mod_unique_id.so
     LoadModule setenvif_module /usr/lib/apache/1.3/mod_setenvif.so
     # LoadModule sys_auth_module /usr/lib/apache/1.3/mod_auth_sys.so
     # LoadModule put_module /usr/lib/apache/1.3/mod_put.so
     # LoadModule throttle_module /usr/lib/apache/1.3/mod_throttle.so
     # LoadModule allowdev_module /usr/lib/apache/1.3/mod_allowdev.so
     # LoadModule auth_mysql_module /usr/lib/apache/1.3/mod_auth_mysql.so
     # LoadModule pgsql_auth_module /usr/lib/apache/1.3/mod_auth_pgsql.so
     # LoadModule eaccess_module /usr/lib/apache/1.3/mod_eaccess.so
     # LoadModule roaming_module /usr/lib/apache/1.3/mod_roaming.so

     #
     # ExtendedStatus: Controla de o Apache gerará detalhes completos de status
     # (ExtendedStatus On) ou apenas detalhes básicos (ExtendedStatus Off) quando o
     # manipulador (handler) "server-status" for usado. O padrão é Off.
     #
     ExtendedStatus on

     #
     # ErrorLog: A localização do arquivo de log de erros.
     # Se não estiver especificando a diretiva ErrorLog dentro de <VirtualHost>,
     # as mensagens de erros relativas aos hosts virtuais serão registradas neste
     # arquivo. Se definir um arquivo de log de erros para <VirtualHost>, as
     # mensagens relativas ao servidor controlados por ela serão registradas lá e
     # não neste arquivo.
     #
     ErrorLog /var/log/apache/error.log

     #
     # LogLevel: Controla o número de mensagens registradas no ErrorLog.
     # Facilidades possíveis incluem: debug, info, notice, warn, error, crit,
     # alert, emerg.
     # Veja as facilidades na seção do guia sobre o syslog para detalhes
     #
     LogLevel warn

     # As seguintes diretivas definem alguns formatos de nomes que serão usadas com a
     # diretiva CustomLog (veja abaixo).

     LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %T %v" full
     LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %P %T" debug
     LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
     LogFormat "%h %l %u %t \"%r\" %>s %b" common
     LogFormat "%{Referer}i -> %U" referer
     LogFormat "%{User-agent}i" agent

     #
     # A localização e formato do arquivo de log de acesso (definida pela diretiva
     # LogFormat acima).
     # Se não definir quaisquer arquivos de log de acesso dentro de um
     # <VirtualHost>, elas serão registradas aqui. Se for definida dentro
     # de <VirtualHost> o arquivo de log de acesso será registrado no
     # arquivo especificado na diretiva e não aqui.
     #
     #CustomLog /var/log/apache/access.log common

     # Se você desejar ter um arquivo de log separado para o agent (navegador usado)
     # e referer, descomente as seguintes diretivas.

     #CustomLog /var/log/apache/referer.log referer
     #CustomLog /var/log/apache/agent.log agent

     # Se preferir um arquivo de log simples, com os detalhes de acesso, agent, e
     # referer (usando o formato combined da diretiva LogFile acima), use a seguinte
     # diretiva.

     CustomLog /var/log/apache/access.log combined

     #
     # Incluir uma linha contendo a versão do servidor e um nome de host virtual
     # para as páginas geradas pelo servidor (documentos de erro, listagens
     # de diretórios FTP, saída dos módulos mod_status e mod_info, etc., exceto
     # para documentos gerados via CGI). Use o valor "EMail" para também incluir
     # um link mailto: para o ServerAdmin. Escolha entre "On", "Off" ou "EMail".
     #
     ServerSignature On

     #
     # PidFile: O arquivo que o servidor gravará os detalhes sobre seu PID quando
     # iniciar.
     #
     PidFile /var/run/apache.pid

     #
     # ScoreBoardFile: Arquivo usado para armazenar detalhes do processo interno do
     # servidor. Nem todas as arquiteturas requerem esta diretiva, mas se a sua
     # requerer (você saberá porque este arquivo será criado quando executar o
     # Apache) então você *deverá* ter certeza que dois processos do Apache não
     # utilizam o mesmo arquivo ScoreBoardFile.
     #
     ScoreBoardFile /var/run/apache.scoreboard

     #
     # Na configuração padrão, o servidor processará este arquivo, o
     # srm.conf e o access.conf neste ordem. Você pode fazer o servidor
     # ignorar estes arquivos usando "/dev/null".
     #
     ResourceConfig /etc/apache/srm.conf
     AccessConfig /etc/apache/access.conf

     #
     # A diretiva LockFile define o caminho do lockfile usado quando o servidor
     # Apache for compilado com a opção USE_FCNTL_SERIALIZED_ACCEPT ou
     # USE_FLOCK_SERIALIZED_ACCEPT. Esta diretiva normalmente deve ser deixada em seu
     # valor padrão. A razão principal de modifica-la é no caso do diretório de logs
     # for montado via um servidor NFS< pois o arquivo especificado em LockFile
     # DEVE SER ARMAZENADO EM UM DISCO LOCAL. O PID do processo do servidor principal
     # é automaticamente adicionado neste arquivo.
     #
     LockFile /var/run/apache.lock

     # ServerName permite ajustar o nome de host que será enviado
     # aos clientes, caso for diferente do nome real (por exemplo, se desejar usar
     # www ao invés do nome real de seu servidor).
     #
     # Nota: Você não pode simplesmente inventar nomes e esperar que funcionem. O nome
     # que definir deverá ser um nome DNS válido para sua máquina.

     ServerName debian.meudominio.org

     # UseCanonicalName: Com esta opção ligada, se o Apache precisar construir uma
     # URL de referência (uma url que é um retorno do servidor a uma requisição) ele
     # usará ServerName e Port para fazer o "nome canônico". Com esta opção desligada,
     # o Apache usará computador:porta que o cliente forneceu, quando possível.
     # Isto também afeta SERVER_NAME e SERVER_PORT nos scripts CGIs.
     #
     # Dependendo de sua configuração, principalmente em virtual hosts, é recomendável
     # deixa-la desativada ou com o valor DNS. O valor DNS obtém o nome do servidor
     # através de uma requisição DNS reversa do endereço IP (muito útil para virtual
     # hosts baseados em IP).
     UseCanonicalName off

     # CacheNegotiatedDocs: Por padrão, o Apache envia Pragma: no-cache com cada
     # documento que foi negociado na base do conteúdo. Isto permite dizer a
     # servidores proxy para não fazerem cache do documento. Descomentando a
     # seguinte linha desativa esta característica, e os proxyes serão capazes
     # de fazer cache dos documentos.

     #CacheNegotiatedDocs

     # Timeout: O número de segundos antes de receber e enviar um time out

     Timeout 300

     # KeepAlive: Se vai permitir ou não conexões persistentes (mais que uma requisição
     # por conexão). Mude para "Off" para desativar.
     KeepAlive On

     # MaxKeepAliveRequests: O número máximo de requisições que serão permitidas
     # durante uma conexão persistente. Mude para 0 para permitir uma quantidade
     # ilimitada. Nós recomendamos deixar este número alto, para obter a máxima
     # performance

     MaxKeepAliveRequests 100

     # KeepAliveTimeout: Número de segundos que aguardará a próxima requisição

     KeepAliveTimeout 15

     # Regulagem do tamanho de pool do servidor. Ao invés de fazer você adivinhar
     # quantos processos servidores precisará, o Apache adapta dinamicamente
     # de acordo com a carga que ele vê --- isto é, ele tenta manter o número de
     # processos o bastante para manipular a carga atual, mas alguns poucos
     # servidores esparsos para manipular requisições transientes (ex. requisições
     # simultâneas múltiplas de um navegador Netscape simples).

     # Ele faz isto verificando periodicamente quantos servidores estão
     # aguardando por uma requisição. Se lá existe menos que MinSpareServers,
     # ele cria um novo processo. Se existe mais que MaxSpareServers, ele
     # fecha alguns processos. Os valores abaixo estão adequados para muitos
     # sites

     MinSpareServers 5
     MaxSpareServers 10

     # Número de servidores que serão iniciados --- deve conter um valor razoável.

     StartServers 5

     # Limita o número total de servidores rodando, i.e., limita o número de clientes
     # que podem conectar simultaneamente --- se este limite é sempre atingido,
     # os clientes podem serão BARRADOS, assim este valor NÃO DEVE SER MUITO PEQUENO.
     # Ele tem a intenção principal de ser um freio para manter um em execução com
     # uma performance aceitável de acordo com os requerimentos de construção e
     # carga calculada no servidor.

     MaxClients 150

     #
     # MaxRequestsPerChild: O número de requisições que cada processo tem permissão
     # de processar antes do processo filho ser finalizado. O filho será finalizado
     # para evitar problemas após uso prolongado quando o Apache (e talvez as
     # bibliotecas que utiliza) tomar memória e outros recursos. Na maioria dos
     # sistemas, isto realmente não é necessário, exceto para alguns (como o
     # Solaris) que possuem ponteiros notáveis em suas bibliotecas. Para estas
     # plataformas, ajuste para algo em torno de 10000 ou algo assim; uma
     # configuração de 0 significa ilimitado.
     #
     # NOTA: Este valor não inclui requisições keepalive após a requisição
     #       inicial por conexão. Por exemplo, se um processo filho manipula
     #       uma requisição inicial e 10 requisições "keptalive" subsequentes,
     #       ele somente contará 1 requisição neste limite.
     #
     MaxRequestsPerChild 30


     # Listen: Permite fazer o Apache escutar um IP determinado e/ou porta, em
     # adição a padrão. Veja também o comando VirtualHost

     #Listen 3000
     #Listen 12.34.56.78:80

     # VirtualHost: Permite o daemon responder a requisições para mais que um
     # endereço IP do servidor, se sua máquina estiver configurada para aceitar pacotes
     # para múltiplos endereços de rede. Isto pode ser feito com a opção de aliasing
     # do ifconfig ou através de patches do kernel como o de VIF.

     # Qualquer diretiva httpd.conf ou srm.conf pode ir no comando VirtualHost.
     # Veja também a entrada BindAddress.

     #<VirtualHost host.some_domain.com>
     #ServerAdmin webmaster@host.some_domain.com
     #DocumentRoot /var/www/host.some_domain.com
     #ServerName host.some_domain.com
     #ErrorLog /var/log/apache/host.some_domain.com-error.log
     #TransferLog /var/log/apache/host.some_domain.com-access.log
     #</VirtualHost>


     # VirtualHost: Se você quiser manter múltiplos domínios/nomes de máquinas em sua
     # máquina você pode ajustar o conteúdo de VirtualHost para eles.
     # Por favor veja a documentação em <http://www.apache.org/docs/vhosts/>
     # para mais detalhes antes de tentar configurar seus hosts virtuais.
     # Você pode usar a opção de linha de comando '-S' para verificar sua configuração
     # de hosts virtuais.

     #
     # Se desejar usar hosts virtuais baseados em nome, será necessário definir no
     # mínimo um endereço IP (e número de porta) para eles.
     #
     #NameVirtualHost 12.34.56.78:80
     #NameVirtualHost 12.34.56.78

     #
     # Exemplo de um Host Virtual:
     # Praticamente qualquer diretiva do Apache pode entrar na condicional
     # VirtualHost.
     #
     #<VirtualHost ip.address.of.host.some_domain.com>
     #    ServerAdmin webmaster@host.some_domain.com
     #    DocumentRoot /www/docs/host.some_domain.com
     #    ServerName host.some_domain.com
     #    ErrorLog logs/host.some_domain.com-error.log
     #    CustomLog logs/host.some_domain.com-access.log common
     #</VirtualHost>

     #<VirtualHost _default_:*>
     #</VirtualHost>
